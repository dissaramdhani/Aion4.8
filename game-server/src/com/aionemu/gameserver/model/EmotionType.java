package com.aionemu.gameserver.model;

/**
 * @author lyahim
 */
public enum EmotionType {
	NONE(-1), // ACT_EVENT_NONE
	SELECT_TARGET(0), // ACT_EVENT_MOVE
	JUMP(1), // ACT_EVENT_JUMP
	SIT(2), // ACT_EVENT_SIT_DOWN
	STAND(3), // ACT_EVENT_STAND_UP
	CHAIR_SIT(4), // ACT_EVENT_SIT_DOWN_ON_CHAIR
	CHAIR_UP(5), // ACT_EVENT_STAND_UP_FROM_CHAIR
	START_FLYTELEPORT(6), // ACT_EVENT_PATH_FLY_TAKE_OFF
	LAND_FLYTELEPORT(7), // ACT_EVENT_PATH_FLY_LAND
	WINDSTREAM(8), // ACT_EVENT_PATH_FLY_FOLLOW
	WINDSTREAM_END(9), // ACT_EVENT_PATH_FLY_ESCAPE
	WINDSTREAM_EXIT(10), // ACT_EVENT_PATH_FLY_FALL
	WINDSTREAM_START_BOOST(11), // ACT_EVENT_PATH_FLY_ACC
	WINDSTREAM_END_BOOST(12), // ACT_EVENT_PATH_FLY_DCC
	FLY(13), // ACT_EVENT_TAKE_OFF
	LAND(14), // ACT_EVENT_LAND
	RIDE(15), // ACT_EVENT_MOUNT
	RIDE_END(16), // ACT_EVENT_DISMOUNT
	ATTACK(17), // ACT_EVENT_ATTACK
	DIE(18), // ACT_EVENT_DEATH
	RESURRECT(19), // ACT_EVENT_RESURRECT
	// (20), // ACT_EVENT_GET
	EMOTE(21), // ACT_EVENT_EMOTION
	EMOTE_END(22), // ACT_EVENT_EMOTION_END
	// (23), // ACT_EVENT_FINISH_LOADING_LEVEL
	ATTACKMODE_IN_MOVE(24), // ACT_EVENT_GOTO_COMBAT_MODE
	NEUTRALMODE_IN_MOVE(25), // ACT_EVENT_GOTO_PEACE_MODE
	WALK(26), // ACT_EVENT_CHANGE_MOVE_TYPE_WALK
	RUN(27), // ACT_EVENT_CHANGE_MOVE_TYPE_RUN
	// (28), // ACT_EVENT_SKILL_CAST
	// (29), // ACT_EVENT_SKILL_CANCEL
	// (30), // ACT_EVENT_SKILL_HIT
	OPEN_DOOR(31), // ACT_EVENT_OPEN
	CLOSE_DOOR(32), // ACT_EVENT_CLOSE
	OPEN_PRIVATESHOP(33), // ACT_EVENT_OPEN_PERSONAL_SHOP
	CLOSE_PRIVATESHOP(34), // ACT_EVENT_CLOSE_PERSONAL_SHOP
	CHANGE_SPEED(35), // ACT_EVENT_CHANGE_SPEED
	POWERSHARD_ON(36), // ACT_EVENT_START_WEAPON_BOOST
	POWERSHARD_OFF(37), // ACT_EVENT_END_WEAPON_BOOST
	ATTACKMODE_IN_STANDING(38), // ACT_EVENT_DRAW_WEAPON
	NEUTRALMODE_IN_STANDING(39), // ACT_EVENT_PUTIN_WEAPON
	START_LOOT(40), // ACT_EVENT_LOOT_START
	END_LOOT(41), // ACT_EVENT_LOOT_END
	START_QUESTLOOT(42), // ACT_EVENT_INTERACT_START
	END_QUESTLOOT(43), // ACT_EVENT_INTERACT_END
	TURN_RIGHT(44), // ACT_EVENT_ROTATE_RIGHT
	TURN_LEFT(45), // ACT_EVENT_ROTATE_LEFT
	START_GLIDE(46), // ACT_EVENT_START_GLIDE
	STOP_GLIDE(47), // ACT_EVENT_END_GLIDE
	STOP_FLY(48), // ACT_EVENT_GOTO_NORMAL_GLIDE
	SUMMON_STOP_JUMP(49), // ACT_EVENT_JUMP_END
	START_FEEDING(50), // ACT_EVENT_START_FNCNPET_FEEDING
	END_FEEDING(51), // ACT_EVENT_END_FNCNPET_FEEDING
	WINDSTREAM_STRAFE(52), // ACT_EVENT_PATH_FLY_SHIFT
	START_SPRINT(53), // ACT_EVENT_RIDE_SPRINT
	END_SPRINT(54); // ACT_EVENT_RIDE_SPRINT_END
	// (55), // ACT_EVENT_FLY_SPRINT
	// (56); // ACT_EVENT_FLY_SPRINT_END

	private final int id;

	EmotionType(int id) {
		this.id = id;
	}

	public int getTypeId() {
		return id;
	}

	public static EmotionType getEmotionTypeById(int id) {
		for (EmotionType emotionType : values()) {
			if (emotionType.getTypeId() == id)
				return emotionType;
		}
		return NONE;
	}

}
